apiVersion: apps/v1
kind: Deployment
metadata:
  name: &app es-topic-indexer
  annotations:
    app.uw.systems/tier: "tier_4"
    app.uw.systems/repos.es-topic-indexer: "https://github.com/utilitywarehouse/es-topic-indexer"
    app.uw.systems/description: "Saves Kafka messages to Elasticsearch"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: *app
  template:
    metadata:
      labels:
        app: *app
        #policy.semaphore.uw.io/name: *app
      annotations:
        prometheus.io/path: /__/metrics
        prometheus.io/port: '8081'
        prometheus.io/scrape: 'true'
    spec:
      imagePullSecrets:
        - name: dockerhub-key
      containers:
        - name: *app
          env:
            - name: ES_HOSTS
              value: "http://elasticsearch:9200"
            - name: ES_INDEX_NAME
              value: "pubsub-example-sample-message"
            - name: KAFKA_BROKERS
              value: "kafka:9092,kafka2:9092"
            - name: KAFKA_TOPIC
              value: "account.exceptions.v1,account.exceptions.v2"
            - name: KAFKA_CONSUMER_GROUP
              value: "account-exceptions-v1"
            - name: KAFKA_CONSUME_OLDEST
              value: "false"
            - name: UW_KAFKA_TLS_AUTH
              value: "true"
          volumeMounts:
            - name: kafka-client-cert
              mountPath: /certs
              readOnly: true
          image: registry.uw.systems/dev-enablement/protobuf-contracts-es-indexer:latest
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /__/ready
              port: 8081
            initialDelaySeconds: 20
          readinessProbe:
            httpGet:
              path: /__/ready
              port: 8081
            initialDelaySeconds: 20
          resources:
            requests:
              cpu: 0
              memory: 500Mi
            limits:
              cpu: 1
              memory: 1Gi
          ports:
            - containerPort: 8081
