---
# Source: elasticsearch/charts/kibana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch-kibana
  namespace: "default"
  labels:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.11.3
    helm.sh/chart: kibana-10.6.7
automountServiceAccountToken: true
---
# Source: elasticsearch/charts/kibana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-kibana-conf
  namespace: "default"
  labels:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.11.3
    helm.sh/chart: kibana-10.6.7
data:
  kibana.yml: |
    pid.file: /opt/bitnami/kibana/tmp/kibana.pid
    server.host: "::"
    server.port: 5601
    elasticsearch.hosts: [http://elasticsearch:9200]
    server.rewriteBasePath: false
---
# Source: elasticsearch/charts/kibana/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: elasticsearch-kibana
  namespace: "default"
  labels:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.11.3
    helm.sh/chart: kibana-10.6.7
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: elasticsearch/charts/kibana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-kibana
  namespace: "default"
  labels:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.11.3
    helm.sh/chart: kibana-10.6.7
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 5601
      targetPort: http
      nodePort: null
  selector:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/name: kibana
---
# Source: elasticsearch/templates/master/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-master-hl
  namespace: "default"
  labels:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.11.3
    helm.sh/chart: elasticsearch-19.13.15
    app.kubernetes.io/component: master
  annotations:
    app.uw.systems/repos: https://github.com/utilitywarehouse/shared-kustomize-bases/tree/main/elasticsearch
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-rest-api
      port: 9200
      targetPort: rest-api
    - name: tcp-transport
      port: 9300
      targetPort: transport
  selector:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: master
---
# Source: elasticsearch/templates/metrics/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-metrics
  namespace: "default"
  labels:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.11.3
    helm.sh/chart: elasticsearch-19.13.15
    app.kubernetes.io/component: metrics
  annotations:
    app.uw.systems/repos: https://github.com/utilitywarehouse/shared-kustomize-bases/tree/main/elasticsearch
    prometheus.io/port: "9114"
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 9114
      targetPort: metrics
  selector:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: metrics
---
# Source: elasticsearch/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: "default"
  labels:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.11.3
    helm.sh/chart: elasticsearch-19.13.15
    app.kubernetes.io/component: master
  annotations:
    app.uw.systems/repos: https://github.com/utilitywarehouse/shared-kustomize-bases/tree/main/elasticsearch
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-rest-api
      port: 9200
      targetPort: rest-api
      nodePort: null
    - name: tcp-transport
      port: 9300
      nodePort: null
  selector:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: master
---
# Source: elasticsearch/charts/kibana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch-kibana
  namespace: "default"
  labels:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.11.3
    helm.sh/chart: kibana-10.6.7
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: elasticsearch
      app.kubernetes.io/name: kibana
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: elasticsearch
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kibana
        app.kubernetes.io/version: 8.11.3
        helm.sh/chart: kibana-10.6.7
        app: kibana
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: elasticsearch
                    app.kubernetes.io/name: kibana
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      serviceAccountName: elasticsearch-kibana
      initContainers:
      containers:
        - name: kibana
          image: docker.io/bitnami/kibana:8.11.3-debian-11-r1
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: KIBANA_PORT_NUMBER
              value: "5601"
            - name: KIBANA_ELASTICSEARCH_URL
              value: "http://elasticsearch:9200"
            - name: KIBANA_ELASTICSEARCH_PORT_NUMBER
              value: "9200"
            - name: KIBANA_FORCE_INITSCRIPTS
              value: "false"
            - name: KIBANA_SERVER_ENABLE_TLS
              value: "false"
            - name: KIBANA_ELASTICSEARCH_ENABLE_TLS
              value: "false"
            - name: KIBANA_ELASTICSEARCH_TLS_USE_PEM
              value: "false"
            - name: KIBANA_ELASTICSEARCH_TLS_VERIFICATION_MODE
              value: "full"
          envFrom:
          ports:
            - name: http
              containerPort: 5601
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /login
              port: http
              scheme: HTTP
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /status
              port: http
              scheme: HTTP
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: kibana-data
              mountPath: /bitnami/kibana
            - name: kibana-config
              mountPath: /bitnami/kibana/conf
      volumes:
        - name: kibana-data
          persistentVolumeClaim:
            claimName: elasticsearch-kibana
        - name: kibana-config
          configMap:
            name: elasticsearch-kibana-conf
---
# Source: elasticsearch/templates/master/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  namespace: "default"
  labels:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.11.3
    helm.sh/chart: elasticsearch-19.13.15
    app.kubernetes.io/component: master
    ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
    app: master
  annotations:
    app.uw.systems/repos: https://github.com/utilitywarehouse/shared-kustomize-bases/tree/main/elasticsearch
spec:
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/instance: elasticsearch
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/component: master
  serviceName: elasticsearch-master-hl
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: elasticsearch
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/version: 8.11.3
        helm.sh/chart: elasticsearch-19.13.15
        app.kubernetes.io/component: master
        ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
        app: master
      annotations:
    spec:
      serviceAccountName: default
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: elasticsearch
          image: docker.io/bitnami/elasticsearch:8.11.3-debian-11-r2
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ELASTICSEARCH_IS_DEDICATED_NODE
              value: "no"
            - name: ELASTICSEARCH_NODE_ROLES
              value: "master"
            - name: ELASTICSEARCH_TRANSPORT_PORT_NUMBER
              value: "9300"
            - name: ELASTICSEARCH_HTTP_PORT_NUMBER
              value: "9200"
            - name: ELASTICSEARCH_CLUSTER_NAME
              value: "elastic"
            
            - name: ELASTICSEARCH_HEAP_SIZE
              value: "128m"
          ports:
            - name: rest-api
              containerPort: 9200
            - name: transport
              containerPort: 9300
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: rest-api
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /opt/bitnami/scripts/elasticsearch/healthcheck.sh
          resources:
            limits:
              cpu: 2000m
              memory: 8Gi
            requests:
              cpu: 250m
              memory: 4Gi
          volumeMounts:
            - name: data
              mountPath: /bitnami/elasticsearch/data
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: "data"
        annotations:
          app.uw.systems/repos: https://github.com/utilitywarehouse/shared-kustomize-bases/tree/main/elasticsearch
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "100Gi"
---
# Source: elasticsearch/templates/metrics/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch-metrics
  namespace: "default"
  labels:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.11.3
    helm.sh/chart: elasticsearch-19.13.15
    app.kubernetes.io/component: metrics
    ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
    app: metrics
  annotations:
    app.uw.systems/repos: https://github.com/utilitywarehouse/shared-kustomize-bases/tree/main/elasticsearch
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "5"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: elasticsearch
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/component: metrics
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: elasticsearch
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/version: 8.11.3
        helm.sh/chart: elasticsearch-19.13.15
        app.kubernetes.io/component: metrics
        ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
        app: metrics
      annotations:
        prometheus.io/port: "9114"
        prometheus.io/scrape: "true"
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: metrics
          image: docker.io/bitnami/elasticsearch-exporter:1.7.0-debian-11-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          command:
            []
          args:
            - --es.uri=http://elasticsearch:9200
            - --es.all
            - --es.ssl-skip-verify
          env:
          envFrom:
          ports:
            - name: metrics
              containerPort: 9114
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: metrics
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: metrics
          resources:
            limits: {}
            requests: {}
